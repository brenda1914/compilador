Estado 42 conflictos: 3 desplazamiento/reducción
Estado 43 conflictos: 3 desplazamiento/reducción
Estado 44 conflictos: 3 desplazamiento/reducción
Estado 45 conflictos: 3 desplazamiento/reducción
Estado 46 conflictos: 3 desplazamiento/reducción
Estado 47 conflictos: 8 desplazamiento/reducción
Estado 48 conflictos: 8 desplazamiento/reducción
Estado 49 conflictos: 8 desplazamiento/reducción


Gramática

    0 $accept: program $end

    1 $@1: %empty

    2 program: LET declarations IN $@1 commands END

    3 declarations: %empty
    4             | INTEGER id_seq IDENTIFIER ','

    5 id_seq: %empty
    6       | id_seq IDENTIFIER ','

    7 commands: %empty
    8         | commands command ';'

    9 command: SKIP
   10        | READ IDENTIFIER
   11        | WRITE exp
   12        | IDENTIFIER ASSGNOP exp

   13 $@2: %empty

   14 $@3: %empty

   15 $@4: %empty

   16 command: IF exp $@2 THEN commands $@3 ELSE $@4 commands FI

   17 $@5: %empty

   18 $@6: %empty

   19 command: WHILE $@5 exp $@6 DO commands END

   20 exp: NUMBER
   21    | IDENTIFIER
   22    | exp '<' exp
   23    | exp '=' exp
   24    | exp '>' exp
   25    | exp '+' exp
   26    | exp '-' exp
   27    | exp '*' exp
   28    | exp '/' exp
   29    | exp '^' exp
   30    | '(' exp ')'


Terminales con las reglas donde aparecen

$end (0) 0
'(' (40) 30
')' (41) 30
'*' (42) 27
'+' (43) 25
',' (44) 4 6
'-' (45) 26
'/' (47) 28
';' (59) 8
'<' (60) 22
'=' (61) 23
'>' (62) 24
'^' (94) 29
error (256)
NUMBER (258) 20
IDENTIFIER (259) 4 6 10 12 21
IF (260) 16
WHILE (261) 19
SKIP (262) 9
THEN (263) 16
ELSE (264) 16
FI (265) 16
DO (266) 19
END (267) 2 19
INTEGER (268) 4
READ (269) 10
WRITE (270) 11
LET (271) 2
IN (272) 2
ASSGNOP (273) 12


No terminales con las reglas donde aparecen

$accept (31)
    en la izquierda: 0
program (32)
    en la izquierda: 2, en la derecha: 0
$@1 (33)
    en la izquierda: 1, en la derecha: 2
declarations (34)
    en la izquierda: 3 4, en la derecha: 2
id_seq (35)
    en la izquierda: 5 6, en la derecha: 4 6
commands (36)
    en la izquierda: 7 8, en la derecha: 2 8 16 19
command (37)
    en la izquierda: 9 10 11 12 16 19, en la derecha: 8
$@2 (38)
    en la izquierda: 13, en la derecha: 16
$@3 (39)
    en la izquierda: 14, en la derecha: 16
$@4 (40)
    en la izquierda: 15, en la derecha: 16
$@5 (41)
    en la izquierda: 17, en la derecha: 19
$@6 (42)
    en la izquierda: 18, en la derecha: 19
exp (43)
    en la izquierda: 20 21 22 23 24 25 26 27 28 29 30, en la derecha:
    11 12 16 19 22 23 24 25 26 27 28 29 30


Estado 0

    0 $accept: . program $end

    LET  desplazar e ir al estado 1

    program  ir al estado 2


Estado 1

    2 program: LET . declarations IN $@1 commands END

    INTEGER  desplazar e ir al estado 3

    $default  reduce usando la regla 3 (declarations)

    declarations  ir al estado 4


Estado 2

    0 $accept: program . $end

    $end  desplazar e ir al estado 5


Estado 3

    4 declarations: INTEGER . id_seq IDENTIFIER ','

    $default  reduce usando la regla 5 (id_seq)

    id_seq  ir al estado 6


Estado 4

    2 program: LET declarations . IN $@1 commands END

    IN  desplazar e ir al estado 7


Estado 5

    0 $accept: program $end .

    $default  aceptar


Estado 6

    4 declarations: INTEGER id_seq . IDENTIFIER ','
    6 id_seq: id_seq . IDENTIFIER ','

    IDENTIFIER  desplazar e ir al estado 8


Estado 7

    2 program: LET declarations IN . $@1 commands END

    $default  reduce usando la regla 1 ($@1)

    $@1  ir al estado 9


Estado 8

    4 declarations: INTEGER id_seq IDENTIFIER . ','
    6 id_seq: id_seq IDENTIFIER . ','

    ','  desplazar e ir al estado 10


Estado 9

    2 program: LET declarations IN $@1 . commands END

    $default  reduce usando la regla 7 (commands)

    commands  ir al estado 11


Estado 10

    4 declarations: INTEGER id_seq IDENTIFIER ',' .
    6 id_seq: id_seq IDENTIFIER ',' .

    IDENTIFIER  reduce usando la regla 6 (id_seq)
    $default    reduce usando la regla 4 (declarations)


Estado 11

    2 program: LET declarations IN $@1 commands . END
    8 commands: commands . command ';'

    IDENTIFIER  desplazar e ir al estado 12
    IF          desplazar e ir al estado 13
    WHILE       desplazar e ir al estado 14
    SKIP        desplazar e ir al estado 15
    END         desplazar e ir al estado 16
    READ        desplazar e ir al estado 17
    WRITE       desplazar e ir al estado 18

    command  ir al estado 19


Estado 12

   12 command: IDENTIFIER . ASSGNOP exp

    ASSGNOP  desplazar e ir al estado 20


Estado 13

   16 command: IF . exp $@2 THEN commands $@3 ELSE $@4 commands FI

    NUMBER      desplazar e ir al estado 21
    IDENTIFIER  desplazar e ir al estado 22
    '('         desplazar e ir al estado 23

    exp  ir al estado 24


Estado 14

   19 command: WHILE . $@5 exp $@6 DO commands END

    $default  reduce usando la regla 17 ($@5)

    $@5  ir al estado 25


Estado 15

    9 command: SKIP .

    $default  reduce usando la regla 9 (command)


Estado 16

    2 program: LET declarations IN $@1 commands END .

    $default  reduce usando la regla 2 (program)


Estado 17

   10 command: READ . IDENTIFIER

    IDENTIFIER  desplazar e ir al estado 26


Estado 18

   11 command: WRITE . exp

    NUMBER      desplazar e ir al estado 21
    IDENTIFIER  desplazar e ir al estado 22
    '('         desplazar e ir al estado 23

    exp  ir al estado 27


Estado 19

    8 commands: commands command . ';'

    ';'  desplazar e ir al estado 28


Estado 20

   12 command: IDENTIFIER ASSGNOP . exp

    NUMBER      desplazar e ir al estado 21
    IDENTIFIER  desplazar e ir al estado 22
    '('         desplazar e ir al estado 23

    exp  ir al estado 29


Estado 21

   20 exp: NUMBER .

    $default  reduce usando la regla 20 (exp)


Estado 22

   21 exp: IDENTIFIER .

    $default  reduce usando la regla 21 (exp)


Estado 23

   30 exp: '(' . exp ')'

    NUMBER      desplazar e ir al estado 21
    IDENTIFIER  desplazar e ir al estado 22
    '('         desplazar e ir al estado 23

    exp  ir al estado 30


Estado 24

   16 command: IF exp . $@2 THEN commands $@3 ELSE $@4 commands FI
   22 exp: exp . '<' exp
   23    | exp . '=' exp
   24    | exp . '>' exp
   25    | exp . '+' exp
   26    | exp . '-' exp
   27    | exp . '*' exp
   28    | exp . '/' exp
   29    | exp . '^' exp

    '-'  desplazar e ir al estado 31
    '+'  desplazar e ir al estado 32
    '*'  desplazar e ir al estado 33
    '/'  desplazar e ir al estado 34
    '^'  desplazar e ir al estado 35
    '<'  desplazar e ir al estado 36
    '='  desplazar e ir al estado 37
    '>'  desplazar e ir al estado 38

    $default  reduce usando la regla 13 ($@2)

    $@2  ir al estado 39


Estado 25

   19 command: WHILE $@5 . exp $@6 DO commands END

    NUMBER      desplazar e ir al estado 21
    IDENTIFIER  desplazar e ir al estado 22
    '('         desplazar e ir al estado 23

    exp  ir al estado 40


Estado 26

   10 command: READ IDENTIFIER .

    $default  reduce usando la regla 10 (command)


Estado 27

   11 command: WRITE exp .
   22 exp: exp . '<' exp
   23    | exp . '=' exp
   24    | exp . '>' exp
   25    | exp . '+' exp
   26    | exp . '-' exp
   27    | exp . '*' exp
   28    | exp . '/' exp
   29    | exp . '^' exp

    '-'  desplazar e ir al estado 31
    '+'  desplazar e ir al estado 32
    '*'  desplazar e ir al estado 33
    '/'  desplazar e ir al estado 34
    '^'  desplazar e ir al estado 35
    '<'  desplazar e ir al estado 36
    '='  desplazar e ir al estado 37
    '>'  desplazar e ir al estado 38

    $default  reduce usando la regla 11 (command)


Estado 28

    8 commands: commands command ';' .

    $default  reduce usando la regla 8 (commands)


Estado 29

   12 command: IDENTIFIER ASSGNOP exp .
   22 exp: exp . '<' exp
   23    | exp . '=' exp
   24    | exp . '>' exp
   25    | exp . '+' exp
   26    | exp . '-' exp
   27    | exp . '*' exp
   28    | exp . '/' exp
   29    | exp . '^' exp

    '-'  desplazar e ir al estado 31
    '+'  desplazar e ir al estado 32
    '*'  desplazar e ir al estado 33
    '/'  desplazar e ir al estado 34
    '^'  desplazar e ir al estado 35
    '<'  desplazar e ir al estado 36
    '='  desplazar e ir al estado 37
    '>'  desplazar e ir al estado 38

    $default  reduce usando la regla 12 (command)


Estado 30

   22 exp: exp . '<' exp
   23    | exp . '=' exp
   24    | exp . '>' exp
   25    | exp . '+' exp
   26    | exp . '-' exp
   27    | exp . '*' exp
   28    | exp . '/' exp
   29    | exp . '^' exp
   30    | '(' exp . ')'

    '-'  desplazar e ir al estado 31
    '+'  desplazar e ir al estado 32
    '*'  desplazar e ir al estado 33
    '/'  desplazar e ir al estado 34
    '^'  desplazar e ir al estado 35
    '<'  desplazar e ir al estado 36
    '='  desplazar e ir al estado 37
    '>'  desplazar e ir al estado 38
    ')'  desplazar e ir al estado 41


Estado 31

   26 exp: exp '-' . exp

    NUMBER      desplazar e ir al estado 21
    IDENTIFIER  desplazar e ir al estado 22
    '('         desplazar e ir al estado 23

    exp  ir al estado 42


Estado 32

   25 exp: exp '+' . exp

    NUMBER      desplazar e ir al estado 21
    IDENTIFIER  desplazar e ir al estado 22
    '('         desplazar e ir al estado 23

    exp  ir al estado 43


Estado 33

   27 exp: exp '*' . exp

    NUMBER      desplazar e ir al estado 21
    IDENTIFIER  desplazar e ir al estado 22
    '('         desplazar e ir al estado 23

    exp  ir al estado 44


Estado 34

   28 exp: exp '/' . exp

    NUMBER      desplazar e ir al estado 21
    IDENTIFIER  desplazar e ir al estado 22
    '('         desplazar e ir al estado 23

    exp  ir al estado 45


Estado 35

   29 exp: exp '^' . exp

    NUMBER      desplazar e ir al estado 21
    IDENTIFIER  desplazar e ir al estado 22
    '('         desplazar e ir al estado 23

    exp  ir al estado 46


Estado 36

   22 exp: exp '<' . exp

    NUMBER      desplazar e ir al estado 21
    IDENTIFIER  desplazar e ir al estado 22
    '('         desplazar e ir al estado 23

    exp  ir al estado 47


Estado 37

   23 exp: exp '=' . exp

    NUMBER      desplazar e ir al estado 21
    IDENTIFIER  desplazar e ir al estado 22
    '('         desplazar e ir al estado 23

    exp  ir al estado 48


Estado 38

   24 exp: exp '>' . exp

    NUMBER      desplazar e ir al estado 21
    IDENTIFIER  desplazar e ir al estado 22
    '('         desplazar e ir al estado 23

    exp  ir al estado 49


Estado 39

   16 command: IF exp $@2 . THEN commands $@3 ELSE $@4 commands FI

    THEN  desplazar e ir al estado 50


Estado 40

   19 command: WHILE $@5 exp . $@6 DO commands END
   22 exp: exp . '<' exp
   23    | exp . '=' exp
   24    | exp . '>' exp
   25    | exp . '+' exp
   26    | exp . '-' exp
   27    | exp . '*' exp
   28    | exp . '/' exp
   29    | exp . '^' exp

    '-'  desplazar e ir al estado 31
    '+'  desplazar e ir al estado 32
    '*'  desplazar e ir al estado 33
    '/'  desplazar e ir al estado 34
    '^'  desplazar e ir al estado 35
    '<'  desplazar e ir al estado 36
    '='  desplazar e ir al estado 37
    '>'  desplazar e ir al estado 38

    $default  reduce usando la regla 18 ($@6)

    $@6  ir al estado 51


Estado 41

   30 exp: '(' exp ')' .

    $default  reduce usando la regla 30 (exp)


Estado 42

   22 exp: exp . '<' exp
   23    | exp . '=' exp
   24    | exp . '>' exp
   25    | exp . '+' exp
   26    | exp . '-' exp
   26    | exp '-' exp .
   27    | exp . '*' exp
   28    | exp . '/' exp
   29    | exp . '^' exp

    '*'  desplazar e ir al estado 33
    '/'  desplazar e ir al estado 34
    '^'  desplazar e ir al estado 35
    '<'  desplazar e ir al estado 36
    '='  desplazar e ir al estado 37
    '>'  desplazar e ir al estado 38

    '<'       [reduce usando la regla 26 (exp)]
    '='       [reduce usando la regla 26 (exp)]
    '>'       [reduce usando la regla 26 (exp)]
    $default  reduce usando la regla 26 (exp)


Estado 43

   22 exp: exp . '<' exp
   23    | exp . '=' exp
   24    | exp . '>' exp
   25    | exp . '+' exp
   25    | exp '+' exp .
   26    | exp . '-' exp
   27    | exp . '*' exp
   28    | exp . '/' exp
   29    | exp . '^' exp

    '*'  desplazar e ir al estado 33
    '/'  desplazar e ir al estado 34
    '^'  desplazar e ir al estado 35
    '<'  desplazar e ir al estado 36
    '='  desplazar e ir al estado 37
    '>'  desplazar e ir al estado 38

    '<'       [reduce usando la regla 25 (exp)]
    '='       [reduce usando la regla 25 (exp)]
    '>'       [reduce usando la regla 25 (exp)]
    $default  reduce usando la regla 25 (exp)


Estado 44

   22 exp: exp . '<' exp
   23    | exp . '=' exp
   24    | exp . '>' exp
   25    | exp . '+' exp
   26    | exp . '-' exp
   27    | exp . '*' exp
   27    | exp '*' exp .
   28    | exp . '/' exp
   29    | exp . '^' exp

    '^'  desplazar e ir al estado 35
    '<'  desplazar e ir al estado 36
    '='  desplazar e ir al estado 37
    '>'  desplazar e ir al estado 38

    '<'       [reduce usando la regla 27 (exp)]
    '='       [reduce usando la regla 27 (exp)]
    '>'       [reduce usando la regla 27 (exp)]
    $default  reduce usando la regla 27 (exp)


Estado 45

   22 exp: exp . '<' exp
   23    | exp . '=' exp
   24    | exp . '>' exp
   25    | exp . '+' exp
   26    | exp . '-' exp
   27    | exp . '*' exp
   28    | exp . '/' exp
   28    | exp '/' exp .
   29    | exp . '^' exp

    '^'  desplazar e ir al estado 35
    '<'  desplazar e ir al estado 36
    '='  desplazar e ir al estado 37
    '>'  desplazar e ir al estado 38

    '<'       [reduce usando la regla 28 (exp)]
    '='       [reduce usando la regla 28 (exp)]
    '>'       [reduce usando la regla 28 (exp)]
    $default  reduce usando la regla 28 (exp)


Estado 46

   22 exp: exp . '<' exp
   23    | exp . '=' exp
   24    | exp . '>' exp
   25    | exp . '+' exp
   26    | exp . '-' exp
   27    | exp . '*' exp
   28    | exp . '/' exp
   29    | exp . '^' exp
   29    | exp '^' exp .

    '^'  desplazar e ir al estado 35
    '<'  desplazar e ir al estado 36
    '='  desplazar e ir al estado 37
    '>'  desplazar e ir al estado 38

    '<'       [reduce usando la regla 29 (exp)]
    '='       [reduce usando la regla 29 (exp)]
    '>'       [reduce usando la regla 29 (exp)]
    $default  reduce usando la regla 29 (exp)


Estado 47

   22 exp: exp . '<' exp
   22    | exp '<' exp .
   23    | exp . '=' exp
   24    | exp . '>' exp
   25    | exp . '+' exp
   26    | exp . '-' exp
   27    | exp . '*' exp
   28    | exp . '/' exp
   29    | exp . '^' exp

    '-'  desplazar e ir al estado 31
    '+'  desplazar e ir al estado 32
    '*'  desplazar e ir al estado 33
    '/'  desplazar e ir al estado 34
    '^'  desplazar e ir al estado 35
    '<'  desplazar e ir al estado 36
    '='  desplazar e ir al estado 37
    '>'  desplazar e ir al estado 38

    '-'       [reduce usando la regla 22 (exp)]
    '+'       [reduce usando la regla 22 (exp)]
    '*'       [reduce usando la regla 22 (exp)]
    '/'       [reduce usando la regla 22 (exp)]
    '^'       [reduce usando la regla 22 (exp)]
    '<'       [reduce usando la regla 22 (exp)]
    '='       [reduce usando la regla 22 (exp)]
    '>'       [reduce usando la regla 22 (exp)]
    $default  reduce usando la regla 22 (exp)


Estado 48

   22 exp: exp . '<' exp
   23    | exp . '=' exp
   23    | exp '=' exp .
   24    | exp . '>' exp
   25    | exp . '+' exp
   26    | exp . '-' exp
   27    | exp . '*' exp
   28    | exp . '/' exp
   29    | exp . '^' exp

    '-'  desplazar e ir al estado 31
    '+'  desplazar e ir al estado 32
    '*'  desplazar e ir al estado 33
    '/'  desplazar e ir al estado 34
    '^'  desplazar e ir al estado 35
    '<'  desplazar e ir al estado 36
    '='  desplazar e ir al estado 37
    '>'  desplazar e ir al estado 38

    '-'       [reduce usando la regla 23 (exp)]
    '+'       [reduce usando la regla 23 (exp)]
    '*'       [reduce usando la regla 23 (exp)]
    '/'       [reduce usando la regla 23 (exp)]
    '^'       [reduce usando la regla 23 (exp)]
    '<'       [reduce usando la regla 23 (exp)]
    '='       [reduce usando la regla 23 (exp)]
    '>'       [reduce usando la regla 23 (exp)]
    $default  reduce usando la regla 23 (exp)


Estado 49

   22 exp: exp . '<' exp
   23    | exp . '=' exp
   24    | exp . '>' exp
   24    | exp '>' exp .
   25    | exp . '+' exp
   26    | exp . '-' exp
   27    | exp . '*' exp
   28    | exp . '/' exp
   29    | exp . '^' exp

    '-'  desplazar e ir al estado 31
    '+'  desplazar e ir al estado 32
    '*'  desplazar e ir al estado 33
    '/'  desplazar e ir al estado 34
    '^'  desplazar e ir al estado 35
    '<'  desplazar e ir al estado 36
    '='  desplazar e ir al estado 37
    '>'  desplazar e ir al estado 38

    '-'       [reduce usando la regla 24 (exp)]
    '+'       [reduce usando la regla 24 (exp)]
    '*'       [reduce usando la regla 24 (exp)]
    '/'       [reduce usando la regla 24 (exp)]
    '^'       [reduce usando la regla 24 (exp)]
    '<'       [reduce usando la regla 24 (exp)]
    '='       [reduce usando la regla 24 (exp)]
    '>'       [reduce usando la regla 24 (exp)]
    $default  reduce usando la regla 24 (exp)


Estado 50

   16 command: IF exp $@2 THEN . commands $@3 ELSE $@4 commands FI

    $default  reduce usando la regla 7 (commands)

    commands  ir al estado 52


Estado 51

   19 command: WHILE $@5 exp $@6 . DO commands END

    DO  desplazar e ir al estado 53


Estado 52

    8 commands: commands . command ';'
   16 command: IF exp $@2 THEN commands . $@3 ELSE $@4 commands FI

    IDENTIFIER  desplazar e ir al estado 12
    IF          desplazar e ir al estado 13
    WHILE       desplazar e ir al estado 14
    SKIP        desplazar e ir al estado 15
    READ        desplazar e ir al estado 17
    WRITE       desplazar e ir al estado 18

    $default  reduce usando la regla 14 ($@3)

    command  ir al estado 19
    $@3      ir al estado 54


Estado 53

   19 command: WHILE $@5 exp $@6 DO . commands END

    $default  reduce usando la regla 7 (commands)

    commands  ir al estado 55


Estado 54

   16 command: IF exp $@2 THEN commands $@3 . ELSE $@4 commands FI

    ELSE  desplazar e ir al estado 56


Estado 55

    8 commands: commands . command ';'
   19 command: WHILE $@5 exp $@6 DO commands . END

    IDENTIFIER  desplazar e ir al estado 12
    IF          desplazar e ir al estado 13
    WHILE       desplazar e ir al estado 14
    SKIP        desplazar e ir al estado 15
    END         desplazar e ir al estado 57
    READ        desplazar e ir al estado 17
    WRITE       desplazar e ir al estado 18

    command  ir al estado 19


Estado 56

   16 command: IF exp $@2 THEN commands $@3 ELSE . $@4 commands FI

    $default  reduce usando la regla 15 ($@4)

    $@4  ir al estado 58


Estado 57

   19 command: WHILE $@5 exp $@6 DO commands END .

    $default  reduce usando la regla 19 (command)


Estado 58

   16 command: IF exp $@2 THEN commands $@3 ELSE $@4 . commands FI

    $default  reduce usando la regla 7 (commands)

    commands  ir al estado 59


Estado 59

    8 commands: commands . command ';'
   16 command: IF exp $@2 THEN commands $@3 ELSE $@4 commands . FI

    IDENTIFIER  desplazar e ir al estado 12
    IF          desplazar e ir al estado 13
    WHILE       desplazar e ir al estado 14
    SKIP        desplazar e ir al estado 15
    FI          desplazar e ir al estado 60
    READ        desplazar e ir al estado 17
    WRITE       desplazar e ir al estado 18

    command  ir al estado 19


Estado 60

   16 command: IF exp $@2 THEN commands $@3 ELSE $@4 commands FI .

    $default  reduce usando la regla 16 (command)
